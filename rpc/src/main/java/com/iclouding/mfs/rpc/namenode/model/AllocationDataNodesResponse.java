// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ClientNameNodeProtol.proto

package com.iclouding.mfs.rpc.namenode.model;

/**
 * Protobuf type {@code com.iclouding.mfs.rpc.namenode.AllocationDataNodesResponse}
 */
public  final class AllocationDataNodesResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.iclouding.mfs.rpc.namenode.AllocationDataNodesResponse)
    AllocationDataNodesResponseOrBuilder {
  // Use AllocationDataNodesResponse.newBuilder() to construct.
  private AllocationDataNodesResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AllocationDataNodesResponse() {
    path_ = "";
    status_ = 0;
    message_ = "";
    dataNodeInfos_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private AllocationDataNodesResponse(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            path_ = s;
            break;
          }
          case 16: {

            status_ = input.readInt32();
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            message_ = s;
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              dataNodeInfos_ = new java.util.ArrayList<com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto>();
              mutable_bitField0_ |= 0x00000008;
            }
            dataNodeInfos_.add(
                input.readMessage(com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto.parser(), extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        dataNodeInfos_ = java.util.Collections.unmodifiableList(dataNodeInfos_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.iclouding.mfs.rpc.namenode.model.ClientNameNodeProtol.internal_static_com_iclouding_mfs_rpc_namenode_AllocationDataNodesResponse_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.iclouding.mfs.rpc.namenode.model.ClientNameNodeProtol.internal_static_com_iclouding_mfs_rpc_namenode_AllocationDataNodesResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse.class, com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse.Builder.class);
  }

  private int bitField0_;
  public static final int PATH_FIELD_NUMBER = 1;
  private volatile java.lang.Object path_;
  /**
   * <pre>
   * 路径
   * </pre>
   *
   * <code>optional string path = 1;</code>
   */
  public java.lang.String getPath() {
    java.lang.Object ref = path_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      path_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 路径
   * </pre>
   *
   * <code>optional string path = 1;</code>
   */
  public com.google.protobuf.ByteString
      getPathBytes() {
    java.lang.Object ref = path_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      path_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int STATUS_FIELD_NUMBER = 2;
  private int status_;
  /**
   * <pre>
   * 状态
   * </pre>
   *
   * <code>optional int32 status = 2;</code>
   */
  public int getStatus() {
    return status_;
  }

  public static final int MESSAGE_FIELD_NUMBER = 3;
  private volatile java.lang.Object message_;
  /**
   * <pre>
   * 异常时提示消息
   * </pre>
   *
   * <code>optional string message = 3;</code>
   */
  public java.lang.String getMessage() {
    java.lang.Object ref = message_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      message_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 异常时提示消息
   * </pre>
   *
   * <code>optional string message = 3;</code>
   */
  public com.google.protobuf.ByteString
      getMessageBytes() {
    java.lang.Object ref = message_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      message_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DATA_NODE_INFOS_FIELD_NUMBER = 4;
  private java.util.List<com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto> dataNodeInfos_;
  /**
   * <pre>
   * 返回的 datanodes
   * </pre>
   *
   * <code>repeated .com.iclouding.mfs.rpc.namenode.DataNodeInfoProto data_node_infos = 4;</code>
   */
  public java.util.List<com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto> getDataNodeInfosList() {
    return dataNodeInfos_;
  }
  /**
   * <pre>
   * 返回的 datanodes
   * </pre>
   *
   * <code>repeated .com.iclouding.mfs.rpc.namenode.DataNodeInfoProto data_node_infos = 4;</code>
   */
  public java.util.List<? extends com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProtoOrBuilder> 
      getDataNodeInfosOrBuilderList() {
    return dataNodeInfos_;
  }
  /**
   * <pre>
   * 返回的 datanodes
   * </pre>
   *
   * <code>repeated .com.iclouding.mfs.rpc.namenode.DataNodeInfoProto data_node_infos = 4;</code>
   */
  public int getDataNodeInfosCount() {
    return dataNodeInfos_.size();
  }
  /**
   * <pre>
   * 返回的 datanodes
   * </pre>
   *
   * <code>repeated .com.iclouding.mfs.rpc.namenode.DataNodeInfoProto data_node_infos = 4;</code>
   */
  public com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto getDataNodeInfos(int index) {
    return dataNodeInfos_.get(index);
  }
  /**
   * <pre>
   * 返回的 datanodes
   * </pre>
   *
   * <code>repeated .com.iclouding.mfs.rpc.namenode.DataNodeInfoProto data_node_infos = 4;</code>
   */
  public com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProtoOrBuilder getDataNodeInfosOrBuilder(
      int index) {
    return dataNodeInfos_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getPathBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, path_);
    }
    if (status_ != 0) {
      output.writeInt32(2, status_);
    }
    if (!getMessageBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, message_);
    }
    for (int i = 0; i < dataNodeInfos_.size(); i++) {
      output.writeMessage(4, dataNodeInfos_.get(i));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getPathBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, path_);
    }
    if (status_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, status_);
    }
    if (!getMessageBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, message_);
    }
    for (int i = 0; i < dataNodeInfos_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, dataNodeInfos_.get(i));
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse)) {
      return super.equals(obj);
    }
    com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse other = (com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse) obj;

    boolean result = true;
    result = result && getPath()
        .equals(other.getPath());
    result = result && (getStatus()
        == other.getStatus());
    result = result && getMessage()
        .equals(other.getMessage());
    result = result && getDataNodeInfosList()
        .equals(other.getDataNodeInfosList());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    hash = (37 * hash) + PATH_FIELD_NUMBER;
    hash = (53 * hash) + getPath().hashCode();
    hash = (37 * hash) + STATUS_FIELD_NUMBER;
    hash = (53 * hash) + getStatus();
    hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
    hash = (53 * hash) + getMessage().hashCode();
    if (getDataNodeInfosCount() > 0) {
      hash = (37 * hash) + DATA_NODE_INFOS_FIELD_NUMBER;
      hash = (53 * hash) + getDataNodeInfosList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.iclouding.mfs.rpc.namenode.AllocationDataNodesResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.iclouding.mfs.rpc.namenode.AllocationDataNodesResponse)
      com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.iclouding.mfs.rpc.namenode.model.ClientNameNodeProtol.internal_static_com_iclouding_mfs_rpc_namenode_AllocationDataNodesResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.iclouding.mfs.rpc.namenode.model.ClientNameNodeProtol.internal_static_com_iclouding_mfs_rpc_namenode_AllocationDataNodesResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse.class, com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse.Builder.class);
    }

    // Construct using com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getDataNodeInfosFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      path_ = "";

      status_ = 0;

      message_ = "";

      if (dataNodeInfosBuilder_ == null) {
        dataNodeInfos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        dataNodeInfosBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.iclouding.mfs.rpc.namenode.model.ClientNameNodeProtol.internal_static_com_iclouding_mfs_rpc_namenode_AllocationDataNodesResponse_descriptor;
    }

    public com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse getDefaultInstanceForType() {
      return com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse.getDefaultInstance();
    }

    public com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse build() {
      com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse buildPartial() {
      com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse result = new com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.path_ = path_;
      result.status_ = status_;
      result.message_ = message_;
      if (dataNodeInfosBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          dataNodeInfos_ = java.util.Collections.unmodifiableList(dataNodeInfos_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.dataNodeInfos_ = dataNodeInfos_;
      } else {
        result.dataNodeInfos_ = dataNodeInfosBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse) {
        return mergeFrom((com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse other) {
      if (other == com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse.getDefaultInstance()) return this;
      if (!other.getPath().isEmpty()) {
        path_ = other.path_;
        onChanged();
      }
      if (other.getStatus() != 0) {
        setStatus(other.getStatus());
      }
      if (!other.getMessage().isEmpty()) {
        message_ = other.message_;
        onChanged();
      }
      if (dataNodeInfosBuilder_ == null) {
        if (!other.dataNodeInfos_.isEmpty()) {
          if (dataNodeInfos_.isEmpty()) {
            dataNodeInfos_ = other.dataNodeInfos_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureDataNodeInfosIsMutable();
            dataNodeInfos_.addAll(other.dataNodeInfos_);
          }
          onChanged();
        }
      } else {
        if (!other.dataNodeInfos_.isEmpty()) {
          if (dataNodeInfosBuilder_.isEmpty()) {
            dataNodeInfosBuilder_.dispose();
            dataNodeInfosBuilder_ = null;
            dataNodeInfos_ = other.dataNodeInfos_;
            bitField0_ = (bitField0_ & ~0x00000008);
            dataNodeInfosBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDataNodeInfosFieldBuilder() : null;
          } else {
            dataNodeInfosBuilder_.addAllMessages(other.dataNodeInfos_);
          }
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object path_ = "";
    /**
     * <pre>
     * 路径
     * </pre>
     *
     * <code>optional string path = 1;</code>
     */
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        path_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 路径
     * </pre>
     *
     * <code>optional string path = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 路径
     * </pre>
     *
     * <code>optional string path = 1;</code>
     */
    public Builder setPath(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      path_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 路径
     * </pre>
     *
     * <code>optional string path = 1;</code>
     */
    public Builder clearPath() {
      
      path_ = getDefaultInstance().getPath();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 路径
     * </pre>
     *
     * <code>optional string path = 1;</code>
     */
    public Builder setPathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      path_ = value;
      onChanged();
      return this;
    }

    private int status_ ;
    /**
     * <pre>
     * 状态
     * </pre>
     *
     * <code>optional int32 status = 2;</code>
     */
    public int getStatus() {
      return status_;
    }
    /**
     * <pre>
     * 状态
     * </pre>
     *
     * <code>optional int32 status = 2;</code>
     */
    public Builder setStatus(int value) {
      
      status_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 状态
     * </pre>
     *
     * <code>optional int32 status = 2;</code>
     */
    public Builder clearStatus() {
      
      status_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object message_ = "";
    /**
     * <pre>
     * 异常时提示消息
     * </pre>
     *
     * <code>optional string message = 3;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 异常时提示消息
     * </pre>
     *
     * <code>optional string message = 3;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 异常时提示消息
     * </pre>
     *
     * <code>optional string message = 3;</code>
     */
    public Builder setMessage(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      message_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 异常时提示消息
     * </pre>
     *
     * <code>optional string message = 3;</code>
     */
    public Builder clearMessage() {
      
      message_ = getDefaultInstance().getMessage();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 异常时提示消息
     * </pre>
     *
     * <code>optional string message = 3;</code>
     */
    public Builder setMessageBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      message_ = value;
      onChanged();
      return this;
    }

    private java.util.List<com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto> dataNodeInfos_ =
      java.util.Collections.emptyList();
    private void ensureDataNodeInfosIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        dataNodeInfos_ = new java.util.ArrayList<com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto>(dataNodeInfos_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto, com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto.Builder, com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProtoOrBuilder> dataNodeInfosBuilder_;

    /**
     * <pre>
     * 返回的 datanodes
     * </pre>
     *
     * <code>repeated .com.iclouding.mfs.rpc.namenode.DataNodeInfoProto data_node_infos = 4;</code>
     */
    public java.util.List<com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto> getDataNodeInfosList() {
      if (dataNodeInfosBuilder_ == null) {
        return java.util.Collections.unmodifiableList(dataNodeInfos_);
      } else {
        return dataNodeInfosBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 返回的 datanodes
     * </pre>
     *
     * <code>repeated .com.iclouding.mfs.rpc.namenode.DataNodeInfoProto data_node_infos = 4;</code>
     */
    public int getDataNodeInfosCount() {
      if (dataNodeInfosBuilder_ == null) {
        return dataNodeInfos_.size();
      } else {
        return dataNodeInfosBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 返回的 datanodes
     * </pre>
     *
     * <code>repeated .com.iclouding.mfs.rpc.namenode.DataNodeInfoProto data_node_infos = 4;</code>
     */
    public com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto getDataNodeInfos(int index) {
      if (dataNodeInfosBuilder_ == null) {
        return dataNodeInfos_.get(index);
      } else {
        return dataNodeInfosBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 返回的 datanodes
     * </pre>
     *
     * <code>repeated .com.iclouding.mfs.rpc.namenode.DataNodeInfoProto data_node_infos = 4;</code>
     */
    public Builder setDataNodeInfos(
        int index, com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto value) {
      if (dataNodeInfosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDataNodeInfosIsMutable();
        dataNodeInfos_.set(index, value);
        onChanged();
      } else {
        dataNodeInfosBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 返回的 datanodes
     * </pre>
     *
     * <code>repeated .com.iclouding.mfs.rpc.namenode.DataNodeInfoProto data_node_infos = 4;</code>
     */
    public Builder setDataNodeInfos(
        int index, com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto.Builder builderForValue) {
      if (dataNodeInfosBuilder_ == null) {
        ensureDataNodeInfosIsMutable();
        dataNodeInfos_.set(index, builderForValue.build());
        onChanged();
      } else {
        dataNodeInfosBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 返回的 datanodes
     * </pre>
     *
     * <code>repeated .com.iclouding.mfs.rpc.namenode.DataNodeInfoProto data_node_infos = 4;</code>
     */
    public Builder addDataNodeInfos(com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto value) {
      if (dataNodeInfosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDataNodeInfosIsMutable();
        dataNodeInfos_.add(value);
        onChanged();
      } else {
        dataNodeInfosBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 返回的 datanodes
     * </pre>
     *
     * <code>repeated .com.iclouding.mfs.rpc.namenode.DataNodeInfoProto data_node_infos = 4;</code>
     */
    public Builder addDataNodeInfos(
        int index, com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto value) {
      if (dataNodeInfosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDataNodeInfosIsMutable();
        dataNodeInfos_.add(index, value);
        onChanged();
      } else {
        dataNodeInfosBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 返回的 datanodes
     * </pre>
     *
     * <code>repeated .com.iclouding.mfs.rpc.namenode.DataNodeInfoProto data_node_infos = 4;</code>
     */
    public Builder addDataNodeInfos(
        com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto.Builder builderForValue) {
      if (dataNodeInfosBuilder_ == null) {
        ensureDataNodeInfosIsMutable();
        dataNodeInfos_.add(builderForValue.build());
        onChanged();
      } else {
        dataNodeInfosBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 返回的 datanodes
     * </pre>
     *
     * <code>repeated .com.iclouding.mfs.rpc.namenode.DataNodeInfoProto data_node_infos = 4;</code>
     */
    public Builder addDataNodeInfos(
        int index, com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto.Builder builderForValue) {
      if (dataNodeInfosBuilder_ == null) {
        ensureDataNodeInfosIsMutable();
        dataNodeInfos_.add(index, builderForValue.build());
        onChanged();
      } else {
        dataNodeInfosBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 返回的 datanodes
     * </pre>
     *
     * <code>repeated .com.iclouding.mfs.rpc.namenode.DataNodeInfoProto data_node_infos = 4;</code>
     */
    public Builder addAllDataNodeInfos(
        java.lang.Iterable<? extends com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto> values) {
      if (dataNodeInfosBuilder_ == null) {
        ensureDataNodeInfosIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dataNodeInfos_);
        onChanged();
      } else {
        dataNodeInfosBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 返回的 datanodes
     * </pre>
     *
     * <code>repeated .com.iclouding.mfs.rpc.namenode.DataNodeInfoProto data_node_infos = 4;</code>
     */
    public Builder clearDataNodeInfos() {
      if (dataNodeInfosBuilder_ == null) {
        dataNodeInfos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        dataNodeInfosBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 返回的 datanodes
     * </pre>
     *
     * <code>repeated .com.iclouding.mfs.rpc.namenode.DataNodeInfoProto data_node_infos = 4;</code>
     */
    public Builder removeDataNodeInfos(int index) {
      if (dataNodeInfosBuilder_ == null) {
        ensureDataNodeInfosIsMutable();
        dataNodeInfos_.remove(index);
        onChanged();
      } else {
        dataNodeInfosBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 返回的 datanodes
     * </pre>
     *
     * <code>repeated .com.iclouding.mfs.rpc.namenode.DataNodeInfoProto data_node_infos = 4;</code>
     */
    public com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto.Builder getDataNodeInfosBuilder(
        int index) {
      return getDataNodeInfosFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 返回的 datanodes
     * </pre>
     *
     * <code>repeated .com.iclouding.mfs.rpc.namenode.DataNodeInfoProto data_node_infos = 4;</code>
     */
    public com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProtoOrBuilder getDataNodeInfosOrBuilder(
        int index) {
      if (dataNodeInfosBuilder_ == null) {
        return dataNodeInfos_.get(index);  } else {
        return dataNodeInfosBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 返回的 datanodes
     * </pre>
     *
     * <code>repeated .com.iclouding.mfs.rpc.namenode.DataNodeInfoProto data_node_infos = 4;</code>
     */
    public java.util.List<? extends com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProtoOrBuilder> 
         getDataNodeInfosOrBuilderList() {
      if (dataNodeInfosBuilder_ != null) {
        return dataNodeInfosBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(dataNodeInfos_);
      }
    }
    /**
     * <pre>
     * 返回的 datanodes
     * </pre>
     *
     * <code>repeated .com.iclouding.mfs.rpc.namenode.DataNodeInfoProto data_node_infos = 4;</code>
     */
    public com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto.Builder addDataNodeInfosBuilder() {
      return getDataNodeInfosFieldBuilder().addBuilder(
          com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto.getDefaultInstance());
    }
    /**
     * <pre>
     * 返回的 datanodes
     * </pre>
     *
     * <code>repeated .com.iclouding.mfs.rpc.namenode.DataNodeInfoProto data_node_infos = 4;</code>
     */
    public com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto.Builder addDataNodeInfosBuilder(
        int index) {
      return getDataNodeInfosFieldBuilder().addBuilder(
          index, com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto.getDefaultInstance());
    }
    /**
     * <pre>
     * 返回的 datanodes
     * </pre>
     *
     * <code>repeated .com.iclouding.mfs.rpc.namenode.DataNodeInfoProto data_node_infos = 4;</code>
     */
    public java.util.List<com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto.Builder> 
         getDataNodeInfosBuilderList() {
      return getDataNodeInfosFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto, com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto.Builder, com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProtoOrBuilder> 
        getDataNodeInfosFieldBuilder() {
      if (dataNodeInfosBuilder_ == null) {
        dataNodeInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto, com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProto.Builder, com.iclouding.mfs.rpc.namenode.model.DataNodeInfoProtoOrBuilder>(
                dataNodeInfos_,
                ((bitField0_ & 0x00000008) == 0x00000008),
                getParentForChildren(),
                isClean());
        dataNodeInfos_ = null;
      }
      return dataNodeInfosBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:com.iclouding.mfs.rpc.namenode.AllocationDataNodesResponse)
  }

  // @@protoc_insertion_point(class_scope:com.iclouding.mfs.rpc.namenode.AllocationDataNodesResponse)
  private static final com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse();
  }

  public static com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AllocationDataNodesResponse>
      PARSER = new com.google.protobuf.AbstractParser<AllocationDataNodesResponse>() {
    public AllocationDataNodesResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new AllocationDataNodesResponse(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AllocationDataNodesResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AllocationDataNodesResponse> getParserForType() {
    return PARSER;
  }

  public com.iclouding.mfs.rpc.namenode.model.AllocationDataNodesResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

